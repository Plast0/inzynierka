/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.4.1 .\building.gltf 
*/

import { useGLTF } from "@react-three/drei";
import { useEffect, useState } from "react";
import { MeshBasicMaterial } from "three";
import {  ThreeEvent } from "@react-three/fiber";
import {IBuilding, Nodes, Materials} from './IBuilding'


export function Building({ onClick, ...props }: IBuilding) {
  const { nodes, materials } = useGLTF("/models/building.gltf")  as unknown as {
    nodes: Nodes;
    materials: Materials;
  };
  const [hovered, hover] = useState<string | null>(null);
  const defaultMaterial = new MeshBasicMaterial({ color: 0xff7f7f });

  useEffect(() => {
    document.body.style.cursor = hovered ? "pointer" : "auto";
  }, [hovered]);

  const handlePointerOver = (event: ThreeEvent<PointerEvent>, mesh:string) => {
    event.stopPropagation();
    hover(mesh);
  };

  const handlePointerOut = (event: ThreeEvent<PointerEvent>) => {
    event.stopPropagation();
    hover(null);
  };

  return (
    <group {...props} dispose={null}>
      <group rotation={[0, -1.563, 0]}>
        <pointLight
          intensity={1000}
          decay={2}
          position={[13.948, 8.974, -20.916]}
          rotation={[-1.839, 0.602, 1.932]}
        />
        <group position={[-35, 0, -35]} scale={70}>
          <mesh geometry={nodes.Teren_1.geometry} material={materials.Ziemia} />
          <mesh geometry={nodes.Teren_2.geometry} material={materials.Trwa} />
        </group>

        <group
          position={[0, 0, -2]}
          onClick={(e) => {
            e.stopPropagation();
            console.log("stropDachuPlaskiego");
            onClick("stropDachuPlaskiego");
          }}
          onPointerOver={(e) => handlePointerOver(e, "stropDachuPlaskiego")}
          onPointerOut={handlePointerOut}
        >
          <mesh
            geometry={nodes.stropDachuPlaskiego_1.geometry}
            material={
              hovered === "stropDachuPlaskiego"
                ? defaultMaterial
                : materials.Bryla
            }
          />
          <mesh
            geometry={nodes.stropDachuPlaskiego_2.geometry}
            material={materials.Konstrukcja}
          />
          <mesh
            geometry={nodes.stropDachuPlaskiego_3.geometry}
            material={materials.Styropian}
          />
        </group>

        <group
          onClick={(e) => {
            e.stopPropagation();
            console.log("scianaZewnetrzna");
            onClick("scianaZewnetrzna");
          }}
          onPointerOver={(e) => handlePointerOver(e, "scianaZewnetrzna")}
          onPointerOut={handlePointerOut}
        >
          <mesh
            geometry={nodes.ScianyZewnetrzne_1.geometry}
            material={
              hovered === "scianaZewnetrzna" ? defaultMaterial : materials.Bryla
            }
          />
          <mesh
            geometry={nodes.ScianyZewnetrzne_2.geometry}
            material={materials.Konstrukcja}
          />
          <mesh
            geometry={nodes.ScianyZewnetrzne_3.geometry}
            material={materials.Styropian}
          />
        </group>

        <group
          position={[0, -2.63, 0]}
          onClick={(e) => {
            e.stopPropagation();
            console.log("stropNadPiwnica");
            onClick("stropNadPiwnica");
          }}
          onPointerOver={(e) => handlePointerOver(e, "stropNadPiwnica")}
          onPointerOut={handlePointerOut}
        >
          <mesh
            geometry={nodes.stropNadPiwnica_1.geometry}
            material={
              hovered === "stropNadPiwnica" ? defaultMaterial : materials.Bryla
            }
          />
          <mesh
            geometry={nodes.stropNadPiwnica_2.geometry}
            material={materials.Konstrukcja}
          />
          <mesh
            geometry={nodes.stropNadPiwnica_3.geometry}
            material={materials.Styropian}
          />
        </group>

        <group
          onClick={(e) => {
            e.stopPropagation();
            console.log("dachSpadowy");
            onClick("dachSpadowy");
          }}
          onPointerOver={(e) => handlePointerOver(e, "dachSpadowy")}
          onPointerOut={handlePointerOut}
        >
          <mesh
            geometry={nodes.dachSpadowy_1.geometry}
            material={
              hovered === "dachSpadowy" ? defaultMaterial : materials.Bryla
            }
          />
          <mesh
            geometry={nodes.dachSpadowy_2.geometry}
            material={materials.Welna}
          />
          <mesh
            geometry={nodes.platew.geometry}
            material={nodes.platew.material}
            position={[5.4, 7.69, -0.2]}
          />
          <mesh
            geometry={nodes.krokwie.geometry}
            material={materials.Konstrukcja}
          />
        </group>

        <group
          position={[0, 0, 1.5]}
          onClick={(e) => {
            e.stopPropagation();
            console.log("scianyDzialowe");
            onClick("scianyDzialowe");
          }}
          onPointerOver={(e) => handlePointerOver(e, "scianyDzialowe")}
          onPointerOut={handlePointerOut}
        >
          <mesh
            geometry={nodes.scianyDzialowe_1.geometry}
            material={
              hovered === "scianyDzialowe" ? defaultMaterial : materials.Bryla
            }
          />
          <mesh
            geometry={nodes.scianyDzialowe_2.geometry}
            material={materials.Dzialowa}
          />
        </group>

        <mesh geometry={nodes.okna.geometry} material={materials.Szklo} />

        <group
          onClick={(e) => {
            e.stopPropagation();
            console.log("strop");
            onClick("strop");
          }}
          onPointerOver={(e) => handlePointerOver(e, "strop")}
          onPointerOut={handlePointerOut}
        >
          <mesh
            geometry={nodes.strop_1.geometry}
            material={hovered === "strop" ? defaultMaterial : materials.Bryla}
          />
          <mesh
            geometry={nodes.strop_2.geometry}
            material={materials.Konstrukcja}
          />
        </group>

        <group
          onClick={(e) => {
            e.stopPropagation();
            console.log("ScianyFundamentowe");
            onClick("ScianyFundamentowe");
          }}
          onPointerOver={(e) => handlePointerOver(e, "ScianyFundamentowe")}
          onPointerOut={handlePointerOut}
        >
          <mesh
            geometry={nodes.ScianyFundamentowe_1.geometry}
            material={
              hovered === "ScianyFundamentowe"
                ? defaultMaterial
                : materials.Bryla
            }
          />
          <mesh
            geometry={nodes.ScianyFundamentowe_2.geometry}
            material={
              hovered === "ScianyFundamentowe"
                ? defaultMaterial
                : materials.Konstrukcja
            }
          />
          <mesh
            geometry={nodes.ScianyFundamentowe_3.geometry}
            material={
              hovered === "ScianyFundamentowe"
                ? defaultMaterial
                : materials.Styropian
            }
          />
        </group>

        <group
          onClick={(e) => {
            e.stopPropagation();
            console.log("PlytaFundamentowa");
            onClick("PlytaFundamentowa");
          }}
          onPointerOver={(e) => handlePointerOver(e, "PlytaFundamentowa")}
          onPointerOut={handlePointerOut}
        >
          <mesh
            geometry={nodes.PlytaFundamentowa_1.geometry}
            material={
              hovered === "PlytaFundamentowa"
                ? defaultMaterial
                : materials.Bryla
            }
          />
          <mesh
            geometry={nodes.PlytaFundamentowa_2.geometry}
            material={materials.Konstrukcja}
          />
        </group>

        <group
          onClick={(e) => {
            e.stopPropagation();
            console.log("StropNadwieszony");
            onClick("StropNadwieszony");
          }}
          onPointerOver={(e) => handlePointerOver(e, "StropNadwieszony")}
          onPointerOut={handlePointerOut}
        >
          <mesh
            geometry={nodes.StropNadwieszony_1.geometry}
            material={
              hovered === "StropNadwieszony" ? defaultMaterial : materials.Bryla
            }
          />
          <mesh
            geometry={nodes.StropNadwieszony_2.geometry}
            material={materials.Styropian}
          />
          <mesh
            geometry={nodes.StropNadwieszony_3.geometry}
            material={materials.Konstrukcja}
          />
        </group>

        <mesh
          geometry={nodes.scianaAttykowa_1.geometry}
          material={materials.Bryla}
        />
        <mesh
          geometry={nodes.scianaAttykowa_2.geometry}
          material={materials.Konstrukcja}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/models/building.gltf");
